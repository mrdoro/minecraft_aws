AWSTemplateFormatVersion: 2010-09-09
Description: Minecraft Servers

### PARAMETERS ###

Parameters:
  MinecraftServerUrl:
    Type: String
    Default: https://piston-data.mojang.com/v1/objects/8dd1a28015f51b1803213892b50b7b4fc76e594d/server.jar
    Description: URL to download the Minecraft server jar file
  JavaXmxValue:
    Type: String
    Default: 1G
    Description: Maximum memory allocation pool for a Java virtual machine (JVM)
  JavaXmsValue:
    Type: String
    Default: 512M
    Description: Initial memory allocation pool for a Java virtual machine (JVM)
  LatestAmiId : 
    Type : 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>' 
    Default : '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2'


### RESOURCES ###
Resources:

### NETWORK ###

  MineCraftVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MC-VPC

  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MineCraftVPC
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MC-PSubnet

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MineCraftVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MineCraftVPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Public-RT

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref PublicRouteTable

### EC2 insnce profile for remote access with Session Manager ### 

  SSMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref SSMRole
      Path: "/"
      InstanceProfileName: !Sub ${AWS::StackName}-EC2-SSM

  SSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      RoleName: !Sub ${AWS::StackName}-EC2-SSM

## Security Group for EC2 instance ##

  MinecraftSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Minecraft server
      VpcId: !Ref MineCraftVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 25565
          ToPort: 25565
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Minecraft-SG

### Elastic IP ###

  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-EIP

### EC2 Instance ###
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId # Replace with the ID of Amazon Linux 2023 AMI for 64-bit (Arm)
      InstanceType: t4g.small
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !GetAtt MinecraftSecurityGroup.GroupId
          SubnetId: !Ref MyPublicSubnet # Replace with your public subnet ID
      IamInstanceProfile: !Ref SSMInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp3
            VolumeSize: 10
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum install -y java-17-amazon-corretto-headless
          adduser minecraft
          mkdir /opt/minecraft/
          mkdir /opt/minecraft/server/
          cd /opt/minecraft/server
          wget ${MinecraftServerUrl}
          chown -R minecraft:minecraft /opt/minecraft/
          java -Xmx${JavaXmxValue} -Xms${JavaXmsValue} -jar server.jar nogui
          sleep 40
          sed -i 's/false/true/p' eula.txt
          touch start
          printf '#!/bin/bash\njava -Xmx${JavaXmxValue} -Xms${JavaXmsValue} -jar server.jar nogui\n' >> start
          chmod +x start
          sleep 1
          touch stop
          printf '#!/bin/bash\nkill -9 $(ps -ef | pgrep -f "java")' >> stop
          chmod +x stop
          sleep 1
          cd /etc/systemd/system/
          touch minecraft.service
          printf '[Unit]\nDescription=Minecraft Server on start up\nWants=network-online.target\n[Service]\nUser=minecraft\nWorkingDirectory=/opt/minecraft/server\nExecStart=/opt/minecraft/server/start\nStandardInput=null\n[Install]\nWantedBy=multi-user.target' >> minecraft.service
          sudo systemctl daemon-reload
          sudo systemctl enable minecraft.service
          sudo systemctl start minecraft.service
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-EC2-MC

  MyEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties: 
      AllocationId: !GetAtt MyEIP.AllocationId
      InstanceId: !Ref MyEC2Instance

### OUTPUTS ###
Outputs:
  MyEC2Instance:
    Description: EC2 instance ID
    Value: !Ref MyEC2Instance
  MyEIP:
    Description: Minecraft Server Elastic IP
    Value: !Ref MyEIP